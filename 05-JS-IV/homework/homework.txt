Objetos: los objetos son un tipo de dato que debido al paradigma de programacion orientada a objetos buscamos representar el mundo mediante el codigo, para eso son los objetos ya que a estos les podemos definir diferentes propiedades y estas usarlos con otros objetos de la misma clase esto nos ayuda a reducir la cantidad de codigo y tener una representacion mas realista.

Propiedades: las propiedades de un objeto son items que tienen relacion con este son como partecitas de un objeto, un ejemplo seria tenemos un objeto personas las personas se componen de muchas propiedades como nombre, apellido, edad, hobbies, color de pelo, etc, estas serian las propiedades de nuestro objeto persona.

Metodos: podemos ver los metodos como funciones que posee cada objeto, estos hacen alguna operacion definida en el objeto, podria ser un saludo un calculo estos pertenecen a cada objeto y se acceden mediante el objeto y el nombre del metodo. Estos tambien pueden recibir argumentos como cualquier otra funcion.

Bucle For in: este bucle nos ayuda a iterar sobre un objeto, lo que se hace es definir una clave y por cada valor que existe en el objeto nos recorra este y ya nos muestre lo que necesitamos alguna propiedad en concreto y nos itera todos los objetos que tenemos que estan contendidos, por ejemplo si tenemos varios objetos dentro de personas este nos ayudara a iterar entre todos estos.

Notacion . vs notacion corchetes: a la hora de acceder a los objetos o cambiar sus propiedades podemos hacerlo de estas dos formas, pero cada una tiene sus ventajas y desventajas, la notacion . es mas rapida para escribirla pero como deventaja tiene que es totalmente literal lo que escribe es lo que hace, en cambio la notacion de corchetes nos permite pasar argumentos que por facilidad los hayamos almacenado dentro de una variable, usare como ejemplo un objeto persona este tiene una propiedad nombre si por facilidad definimos la propiedad nombre como una variable i entonces en notacion corchetes podriamos acceder a la propiedad mediande persona[i] en cambio si tratamos de hacer esto en notacion . como persona.i javascript buscara literalmente la propiedad i y nos retornara undefined.